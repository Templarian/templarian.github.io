let t=class extends HTMLElement{connectedCallback(){const t=document.createElement("h3");t.textContent="Boo!",this.shadowRoot.appendChild(t),console.log("connected callback")}disconnectedCallback(){console.log("disconnected callback")}componentWillMount(){console.log("component will mount")}componentDidMount(){console.log("component did mount")}componentWillUnmount(){console.log("component will unmount")}componentDidUnmount(){console.log("component did unmount")}};t=function(t,e,o,n){var c,l=arguments.length,i=l<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,o,n);else for(var a=t.length-1;a>=0;a--)(c=t[a])&&(i=(l<3?c(i):l>3?c(e,o,i):c(e,o))||i);return l>3&&i&&Object.defineProperty(e,o,i),i}([(t=>e=>{if(!t.template)throw new Error("You need to pass a template for the element");const o=document.createElement("template");t.style&&(t.template=`<style>${t.style}</style>${t.template}`),o.innerHTML=t.template;const n=e.prototype.connectedCallback||(()=>{}),c=e.prototype.disconnectedCallback||(()=>{});e.prototype.connectedCallback=function(){const t=document.importNode(o.content,!0);this.attachShadow({mode:"open"}).appendChild(t),this.componentWillMount&&this.componentWillMount(),n.call(this),this.componentDidMount&&this.componentDidMount()},e.prototype.disconnectedCallback=function(){this.componentWillUnmount&&this.componentWillUnmount(),c.call(this),this.componentDidUnmount&&this.componentDidUnmount()},e.prototype.attributeChangedCallback=function(t,e,o){this.attributeChangedCallback(t,e,o)},Object.defineProperty(e,"observedAttributes",{get:function(){return["path"]}})})({selector:"mdi-stack",template:"<div>Stack</div>",style:":host {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: #009cff;     \n      padding: 16px;         \n      border-top: 1px solid black;\n      font-size: 24px;\n    }",useShadow:!0})],t);
//# sourceMappingURL=mdi-stack.js.map
