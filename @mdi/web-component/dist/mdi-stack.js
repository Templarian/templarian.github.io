let t=class extends HTMLElement{connectedCallback(){const t=document.createElement("h3");t.textContent="Boo!",this.shadowRoot.appendChild(t),console.log("connected callback")}disconnectedCallback(){console.log("disconnected callback")}componentWillMount(){console.log("component will mount")}componentDidMount(){console.log("component did mount")}componentWillUnmount(){console.log("component will unmount")}componentDidUnmount(){console.log("component did unmount")}};t=function(t,o,e,n){var l,c=arguments.length,i=c<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,o,e,n);else for(var d=t.length-1;d>=0;d--)(l=t[d])&&(i=(c<3?l(i):c>3?l(o,e,i):l(o,e))||i);return c>3&&i&&Object.defineProperty(o,e,i),i}([(t=>o=>{if(!t.template)throw new Error("You need to pass a template for the element");const e=document.createElement("template");t.style&&(t.template=`<style>${t.style}</style> ${t.template}`),e.innerHTML=t.template;const n=o.prototype.connectedCallback||(()=>{}),l=o.prototype.disconnectedCallback||(()=>{});o.prototype.connectedCallback=function(){const o=document.importNode(e.content,!0);t.useShadow?this.attachShadow({mode:"open"}).appendChild(o):this.appendChild(o),this.componentWillMount&&this.componentWillMount(),n.call(this),this.componentDidMount&&this.componentDidMount()},o.prototype.disconnectedCallback=function(){this.componentWillUnmount&&this.componentWillUnmount(),l.call(this),this.componentDidUnmount&&this.componentDidUnmount()},window.customElements.define(t.selector,o)})({selector:"mdi-stack",template:"<div>Stack</div>",style:":host {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: #009cff;     \n      padding: 16px;         \n      border-top: 1px solid black;\n      font-size: 24px;\n    }",useShadow:!0})],t);
//# sourceMappingURL=mdi-stack.js.map
