let t=class extends HTMLElement{connectedCallback(){console.log("connected callback")}disconnectedCallback(){console.log("disconnected callback")}componentWillMount(){console.log("component will mount")}componentDidMount(){console.log("component did mount")}componentWillUnmount(){console.log("component will unmount")}componentDidUnmount(){console.log("component did unmount")}};t=function(t,e,n,o){var l,c=arguments.length,i=c<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;s>=0;s--)(l=t[s])&&(i=(c<3?l(i):c>3?l(e,n,i):l(e,n))||i);return c>3&&i&&Object.defineProperty(e,n,i),i}([(t=>e=>{if(!t.template)throw new Error("You need to pass a template for the element");const n=document.createElement("template");t.style&&(t.template=`<style>${t.style}</style> ${t.template}`),n.innerHTML=t.template;const o=e.prototype.connectedCallback||(()=>{}),l=e.prototype.disconnectedCallback||(()=>{});e.prototype.connectedCallback=function(){const e=document.importNode(n.content,!0);t.useShadow?this.attachShadow({mode:"open"}).appendChild(e):this.appendChild(e),this.componentWillMount&&this.componentWillMount(),o.call(this),this.componentDidMount&&this.componentDidMount()},e.prototype.disconnectedCallback=function(){this.componentWillUnmount&&this.componentWillUnmount(),l.call(this),this.componentDidUnmount&&this.componentDidUnmount()},window.customElements.define(t.selector,e)})({selector:"mdi-icon",template:'<svg viewBox="0 0 24 24">\n      <path d="M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z"/>\n    </svg>',style:":host {\n      display: inline-block;\n    }\n    :host svg {\n      width: 1.5rem;\n      height: 1.5rem;\n    }",useShadow:!0})],t);
//# sourceMappingURL=mdi-icon.js.map
